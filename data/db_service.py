from data.database import connect_to_database

# –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –≤ —Ç–∞–±–ª–∏—Ü—é products
def add_product(chat_id, name, category):
    conn = connect_to_database()
    if conn:
        cur = conn.cursor()
        try:
            cur.execute("""
                INSERT INTO products (chat_id, name, category, status)
                VALUES (%s, %s, %s, %s)
                RETURNING product_id;
            """, (chat_id, name, category, 'active'))
            
            result = cur.fetchone()
            if result:
                product_id = result[0]
                conn.commit()
                print(f"‚úÖ –¢–æ–≤–∞—Ä '{name}' –¥–æ–¥–∞–Ω–æ –∑ ID {product_id}.")
                return product_id
            else:
                print("‚ùå –ü–æ–º–∏–ª–∫–∞: INSERT –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ ID.")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É: {e}")
        finally:
            cur.close()
            conn.close()

def get_active_products_by_chat(chat_id):
    conn = connect_to_database()
    if conn:
        cur = conn.cursor()
        try:
            cur.execute("""
                SELECT product_id, name, category 
                FROM products 
                WHERE chat_id = %s AND status = 'active';
            """, (chat_id,))
            products = cur.fetchall()
            print(f"üì¶ –ê–∫—Ç–∏–≤–Ω—ñ —Ç–æ–≤–∞—Ä–∏ –¥–ª—è —á–∞—Ç—É {chat_id}: {products}")
            return products
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤: {e}")
        finally:
            cur.close()
            conn.close()

def get_products_by_ids(product_ids):
    conn = connect_to_database()
    if conn:
        cur = conn.cursor()
        try:
            cur.execute("""
                SELECT product_id, name, category
                FROM products
                WHERE product_id = ANY(%s);
            """, (list(map(int, product_ids)),))
            return cur.fetchall()
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞ ID: {e}")
        finally:
            cur.close()
            conn.close()
    return []

def mark_product_as_deleted(product_id):
    conn = connect_to_database()
    if conn:
        cur = conn.cursor()
        try:
            cur.execute("""
                UPDATE products
                SET status = 'deleted'
                WHERE product_id = %s;
            """, (product_id,))
            conn.commit()
            print(f"‚úÖ –¢–æ–≤–∞—Ä –∑ ID {product_id} —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–º—ñ—á–µ–Ω–æ —è–∫ '–≤–∏–¥–∞–ª–µ–Ω–∏–π'.")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–º—ñ—á–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É —è–∫ '–≤–∏–¥–∞–ª–µ–Ω–∏–π': {e}")
        finally:
            cur.close()
            conn.close()

def add_expense(chat_id, amount, category, product_ids):
    """
    –î–æ–¥–∞—î –≤–∏—Ç—Ä–∞—Ç—É –≤ —Ç–∞–±–ª–∏—Ü—é expenses.

    –ê—Ä–≥—É–º–µ–Ω—Ç–∏:
    chat_id - ID —á–∞—Ç—É
    amount - –°—É–º–∞ –≤–∏—Ç—Ä–∞—Ç–∏
    category - –ö–∞—Ç–µ–≥–æ—Ä—ñ—è –≤–∏—Ç—Ä–∞—Ç–∏
    product_ids - –°–ø–∏—Å–æ–∫ ID —Ç–æ–≤–∞—Ä—ñ–≤
    """
    conn = connect_to_database()
    if conn:
        cur = conn.cursor()
        try:
            cur.execute("""
                INSERT INTO expenses (chat_id, amount, category, product_ids)
                VALUES (%s, %s, %s, %s)
                RETURNING expense_id, expense_date;
            """, (chat_id, amount, category, product_ids))
            
            result = cur.fetchone()
            if result:
                expense_id, expense_date = result
                conn.commit()
                print(f"‚úÖ –í–∏—Ç—Ä–∞—Ç—É –∑ ID {expense_id} –¥–æ–¥–∞–Ω–æ –Ω–∞ {expense_date}.")
                return expense_id
            else:
                print("‚ùå –ü–æ–º–∏–ª–∫–∞: INSERT –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ ID –≤–∏—Ç—Ä–∞—Ç–∏.")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç–∏: {e}")
        finally:
            cur.close()
            conn.close()

def mark_product_as_purchased(product_id):
    """
    –û–Ω–æ–≤–ª—é—î —Å—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä—É –≤ —Ç–∞–±–ª–∏—Ü—ñ `products` –Ω–∞ 'purchased'.
    """
    conn = connect_to_database()
    if conn:
        cur = conn.cursor()
        try:
            cur.execute("""
                UPDATE products
                SET status = 'purchased'
                WHERE product_id = %s;
            """, (product_id,))
            conn.commit()
            print(f"‚úÖ –¢–æ–≤–∞—Ä –∑ ID {product_id} –ø–æ–∑–Ω–∞—á–µ–Ω–æ —è–∫ 'purchased'.")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É —è–∫ 'purchased': {e}")
        finally:
            cur.close()
            conn.close()